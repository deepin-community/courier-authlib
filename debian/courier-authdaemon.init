#!/bin/sh
# kFreeBSD do not accept scripts as interpreters, using #!/bin/sh and sourcing.
if [ true != "$INIT_D_SCRIPT_SOURCED" ] ; then
    set "$0" "$@"; INIT_D_SCRIPT_SOURCED=true . /lib/init/init-d-script
fi
### BEGIN INIT INFO
# Provides:          courier-authdaemon
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
### END INIT INFO

# Author: Ondřej Surý <ondrej@debian.org>

DAEMON="/usr/sbin/authdaemond"
DESC="Courier authentication services"
PIDFILE="/run/courier/authdaemon/pid"

do_start_prepare() {
    do_tmpfiles courier-authdaemon
}

do_tmpfiles() {
    local type path mode user group

    TMPFILES=/usr/lib/tmpfiles.d/$1.conf

    if [ -r "$TMPFILES" ]; then
	while read type path mode user group age argument; do
	    if [ "$type" = "d" ]; then
		mkdir -p "$path"
		chmod "$mode" "$path"
		chown "$user:$group" "$path"
		[ -x /sbin/restorecon ] && /sbin/restorecon $path
	    fi
	done < "$TMPFILES"
    fi
}

do_start_cmd_override() {
    if pidofproc ${PIDFILE:+-p ${PIDFILE}} "$DAEMON" >/dev/null; then
        # A subsequent call to start the service must not return an error,
        # if it is already running.
        return 0
    fi

    $DAEMON start
}

do_stop_cmd_override() {
    if ! pidofproc ${PIDFILE:+-p ${PIDFILE}} "$DAEMON" >/dev/null; then
        # If the service is not currently running, a call to stop should
        # indicate success.
        return 0
    fi

    $DAEMON stop
}

do_status_override() {
    status_of_proc "/usr/lib/courier/courier-authlib/authdaemond" "$NAME" && return 0 || return $?
}
